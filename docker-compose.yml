version: '3.7'
services:
  nginx:
    restart: on-failure
    image: nginx:1.20.1-alpine
    volumes:
      - ./nginx.docker.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - web
  redis:
    image: redis:alpine
  celery:
    restart: always
    build:
      context: .
      args:
        - 'FURY_AUTH=${FURY_AUTH}'
    command: >
      sh -c "celery -A django_app worker -l info &&
             celery -A django_app flower"
    volumes:
      - .:/app
    env_file: .env.docker
    depends_on:
      - db
      - redis
      - web
  web:
    build:
      context: .
      args:
        - 'FURY_AUTH=${FURY_AUTH}'
    restart: always
    env_file: .env.docker
    command: >
      sh -c "python manage.py migrate &&
             gunicorn django_app.wsgi:application --bind 0.0.0.0:5000 --reload"
    volumes:
     - .:/app
    depends_on:
     - db
  db:
    image: postgres:13.5-alpine
    env_file: .env.docker
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    ports:
      - 8080:5432
  flower:
    image: mher/flower
    restart: always
    env_file: .env.docker
    depends_on:
      - celery
    ports:
      - 8888:5555
volumes:
  static_volume:
  postgres_data:
